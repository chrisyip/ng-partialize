{"version":3,"file":"dist/ng-partialize.min.js","sources":["index.js"],"names":["angular","Error","inject","context","$injector","$scope","factoryFunction","annotation","isFunction","annotate","isArray","slice","length","deps","forEach","name","push","get","apply","controllerWrapper","module","factory","before","_beforeControllers","after","_afterControllers","registerController","type","collection","Object","defineProperty","value","_Module","_ngPartialized","defineProperties","_Controller","controller","beforeController","this","afterController","Function"],"mappings":";;;;;;CAMC,SAAWA,SACV,IAAKA,QAAS,CACZ,KAAM,IAAIC,OAAM,wEAGlB,QAASC,QAAQC,QAASC,UAAWC,OAAQC,iBAC3C,GAAIC,WAEJ,IAAIP,QAAQQ,WAAWF,iBAAkB,CACvCC,WAAaH,UAAUK,SAASH,qBAC3B,IAAIN,QAAQU,QAAQJ,iBAAkB,CAC3CC,WAAaD,gBAAgBK,MAAM,EAAGL,gBAAgBM,OAAS,EAC/DN,iBAAkBA,gBAAgBA,gBAAgBM,OAAS,GAG7D,GAAIC,QAEJb,SAAQc,QAAQP,WAAY,SAAUQ,MACpC,GAAIA,OAAS,SAAU,CACrBF,KAAKG,KAAKX,YACL,CACLQ,KAAKG,KAAKZ,UAAUa,IAAIF,SAI5BT,iBAAgBY,MAAMf,QAASU,MAGjC,QAASM,mBAAmBC,OAAQL,KAAMZ,QAASG,iBACjD,GAAIe,UAAW,YAAa,SAE5BA,SAAQL,KAAK,SAAUZ,UAAWC,QAChC,GAAIiB,QAASF,OAAOG,mBAAmBR,KAEvC,IAAIf,QAAQU,QAAQY,QAAS,CAC3BtB,QAAQc,QAAQQ,OAAQ,SAAUD,SAChCnB,OAAOC,QAASC,UAAWC,OAAQgB,WAIvCnB,OAAOC,QAASC,UAAWC,OAAQC,gBAEnC,IAAIkB,OAAQJ,OAAOK,kBAAkBV,KAErC,IAAIf,QAAQU,QAAQc,OAAQ,CAC1BxB,QAAQc,QAAQU,MAAO,SAAUH,SAC/BnB,OAAOC,QAASC,UAAWC,OAAQgB,aAKzC,OAAOA,SAGT,QAASK,oBAAoBN,OAAQO,KAAMZ,KAAMT,iBAC/C,GAAIsB,YAAaR,OAAOO,KAExB,IAAI3B,QAAQU,QAAQkB,WAAWb,OAAQ,CACrCa,WAAWb,MAAMC,KAAKV,qBACjB,CACLsB,WAAWb,OAAST,iBAGtB,MAAOc,QAGTS,OAAOC,eAAe9B,QAAS,WAC7B+B,MAAO/B,QAAQoB,QAGjBpB,SAAQoB,OAAS,SAAUL,KAAMF,MAC/B,GAAIO,QAASpB,QAAQgC,QAAQjB,KAAMF,KAEnC,KAAKO,OAAOa,eAAgB,CAC1BJ,OAAOK,iBAAiBd,QACtBG,oBAAsBQ,UAEtBN,mBAAqBM,UAErBI,aACEJ,MAAOX,OAAOgB,YAGhBH,gBACEF,MAAO,OAIXX,QAAOiB,iBAAmB,SAAUtB,KAAMT,iBACxC,MAAOoB,oBAAmBY,KAAM,qBAAsBvB,KAAMT,iBAG9Dc,QAAOmB,gBAAkB,SAAUxB,KAAMT,iBACvC,MAAOoB,oBAAmBY,KAAM,oBAAqBvB,KAAMT,iBAG7Dc,QAAOgB,WAAa,SAAUrB,KAAMT,iBAClCgC,KAAKf,mBAAmBR,QACxBuB,MAAKb,kBAAkBV,QACvBuB,MAAKH,YAAYpB,KAAMI,kBAAkBmB,KAAMvB,KAAMuB,KAAMhC,iBAE3D,OAAOgC,OAIX,MAAOlB,UAER,GAAIoB,UAAS","sourcesContent":["/**\n * ng-partialize\n * @author Chris Yip i@chrisyip.im\n * @website https://github.com/chrisyip/ng-partialize\n * @license MIT\n */\n!(function (angular) {\n  if (!angular) {\n    throw new Error('Cannot found angular, make sure angular is attached to global object')\n  }\n\n  function inject (context, $injector, $scope, factoryFunction) {\n    var annotation\n\n    if (angular.isFunction(factoryFunction)) {\n      annotation = $injector.annotate(factoryFunction)\n    } else if (angular.isArray(factoryFunction)) {\n      annotation = factoryFunction.slice(0, factoryFunction.length - 1)\n      factoryFunction = factoryFunction[factoryFunction.length - 1]\n    }\n\n    var deps = []\n\n    angular.forEach(annotation, function (name) {\n      if (name === '$scope') {\n        deps.push($scope)\n      } else {\n        deps.push($injector.get(name))\n      }\n    })\n\n    factoryFunction.apply(context, deps)\n  }\n\n  function controllerWrapper (module, name, context, factoryFunction) {\n    var factory = ['$injector', '$scope']\n\n    factory.push(function ($injector, $scope) {\n      var before = module._beforeControllers[name]\n\n      if (angular.isArray(before)) {\n        angular.forEach(before, function (factory) {\n          inject(context, $injector, $scope, factory)\n        })\n      }\n\n      inject(context, $injector, $scope, factoryFunction)\n\n      var after = module._afterControllers[name]\n\n      if (angular.isArray(after)) {\n        angular.forEach(after, function (factory) {\n          inject(context, $injector, $scope, factory)\n        })\n      }\n    })\n\n    return factory\n  }\n\n  function registerController (module, type, name, factoryFunction) {\n    var collection = module[type]\n\n    if (angular.isArray(collection[name])) {\n      collection[name].push(factoryFunction)\n    } else {\n      collection[name] = [factoryFunction]\n    }\n\n    return module\n  }\n\n  Object.defineProperty(angular, '_Module', {\n    value: angular.module\n  })\n\n  angular.module = function (name, deps) {\n    var module = angular._Module(name, deps)\n\n    if (!module._ngPartialized) {\n      Object.defineProperties(module, {\n        _beforeControllers: { value: {} },\n\n        _afterControllers: { value: {} },\n\n        _Controller: {\n          value: module.controller\n        },\n\n        _ngPartialized: {\n          value: true\n        }\n      })\n\n      module.beforeController = function (name, factoryFunction) {\n        return registerController(this, '_beforeControllers', name, factoryFunction)\n      }\n\n      module.afterController = function (name, factoryFunction) {\n        return registerController(this, '_afterControllers', name, factoryFunction)\n      }\n\n      module.controller = function (name, factoryFunction) {\n        this._beforeControllers[name] = []\n        this._afterControllers[name] = []\n        this._Controller(name, controllerWrapper(this, name, this, factoryFunction))\n\n        return this\n      }\n    }\n\n    return module\n  }\n})(new Function('return this.angular')())\n"]}